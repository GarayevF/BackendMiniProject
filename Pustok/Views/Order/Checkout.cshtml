@model OrderVM
@{
    ViewData["Title"] = "Checkout";
}

<section class="breadcrumb-section">
    <h2 class="sr-only">Site Breadcrumb</h2>
    <div class="container">
        <div class="breadcrumb-contents">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                    <li class="breadcrumb-item active">Checkout</li>
                </ol>
            </nav>
        </div>
    </div>
</section>
<main id="content" class="page-section inner-page-sec-padding-bottom space-db--20">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <!-- Checkout Form s-->
                <div class="checkout-form">
                    <div class="row row-40">
                        <div class="col-12">
                            <h1 class="quick-title">Checkout</h1>
                            
                        </div>
                        <div class="col-lg-7 mb--20">
                            <!-- Billing Address -->
                            <div id="billing-form" class="mb-40">
                                @await Html.PartialAsync("_CheckoutPartial", Model.Order)
                            </div>
                        </div>
                        <div class="col-lg-5">
                            <div class="row">
                                <!-- Cart Total -->
                                <div class="col-12">
                                    <div class="checkout-cart-total">
                                        <h2 class="checkout-title">YOUR ORDER</h2>
                                        <h4>Product <span>Total</span></h4>
                                        <ul>
                                            @foreach (Basket basket in Model.Baskets)
                                            {
                                                <li>
                                                    <span class="total-value">@basket.Product.Title X @basket.Count</span>
                                                    <span class="total-amount">€@((basket.Product.DiscountedPrice > 0 ? basket.Product.DiscountedPrice : basket.Product.Price) * basket.Count)</span>
                                                </li>
                                            }
                                            
                                        </ul>
                                        <p>Sub Total <span>$@(Model.Baskets.Sum(a => a.Product.DiscountedPrice > 0 ? a.Product.DiscountedPrice : a.Product.Price * a.Count))</span></p>
                                        <p>Ex Tax <span>$@(Model.Baskets.Sum(a => a.Product.ExTax * a.Count))</span></p>
                                        <h4>Grand Total <span>$@(Model.Baskets.Sum(a => (a.Product.DiscountedPrice > 0 ? a.Product.DiscountedPrice : a.Product.Price) * a.Count) + Model.Baskets.Sum(a => a.Product.ExTax * a.Count))</span></h4>
                                        
                                        <button form="checkoutform" class="place-order w-100">Place order</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

