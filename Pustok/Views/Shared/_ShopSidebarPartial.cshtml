@model ProductVM

<div class="inner-page-sidebar">
    <!-- Accordion -->
    <div class="single-block">
        <h3 class="sidebar-title">Categories</h3>
        <ul class="sidebar-menu--shop" style="max-height: 500px; overflow-y: scroll">
            @foreach (Category parent in Model.Categories)
            {
                <li><a class="categorybtn" asp-controller="product" asp-action="filter" asp-route-id="@parent.Id" data-selected="false">@parent.Name (@Model.AllProducts.Count(p => p.Category.ParentId == parent.Id))</a></li>
                @if (parent.Children != null && parent.Children.Count() > 0)
                {
                    <ul class="inner-cat-items">
                        @foreach (Category child in parent.Children)
                        {
                            <li><a class="categorybtn" asp-controller="product" asp-action="filter" asp-route-id="@child.Id" data-selected="false">@child.Name (@Model.AllProducts.Count(p => p.CategoryId == child.Id))</a></li>
                        }
                    </ul>
                }
            }
        </ul>
    </div>
    <!-- Price -->
    <div class="single-block">
        <h3 class="sidebar-title">Fillter By Price</h3>
        <div class="range-slider pt--30">
            <div class="sb-range-slider"></div>
            <div class="slider-price">
                <p>
                    <input type="text" id="amount" readonly="">
                </p>
            </div>
        </div>
    </div>
    <!-- Size -->
    <div class="single-block">
        <h3 class="sidebar-title">Authors</h3>
        <ul class="sidebar-menu--shop menu-type-2" style="max-height: 500px; overflow-y: scroll">
            @foreach(Author author in Model.Authors)
            {
                <li><a class="authorbtn" asp-controller="product" asp-action="filter" asp-route-id="@author.Id">@($"{author.Name} {author.MiddleName} {author.Surname}".Trim()) <span>(@Model.AllProducts.Count(p => p.ProductAuthors.Any(pa => pa.AuthorId == author.Id)))</span></a></li>
            }
        </ul>
    </div>
</div>

<link  rel="stylesheet" href = "//code.jquery.com/ui/1.11.4/themes/base/jquery-ui.css" />
<script src="//code.jquery.com/jquery-1.10.2.js" ></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script type="text/javascript">
    
    $(document).ready(function(e){

        let categoryIds = [];
            let authorIds = [];
            let min = -1;
            let max = -1;
            let sortby = -1;


        $(".sb-range-slider").slider({
            range: true,
            min: @Model.MinimumPrice,
            max: @Model.MaximumPrice,
            values: [@Model.MinimumPrice, @Model.MaximumPrice],
            slide: function (event, ui) {
                $("#amount").val("£" + ui.values[0] + " - £" + ui.values[1]);
                min = ui.values[0];
                max = ui.values[1];

                let path = [];

                if (categoryIds.length > 0) {
                    path.push(`categoriesText=${categoryIds.join(",")}`);
                }

                if (authorIds.length > 0) {
                    path.push(`authorsText=${authorIds.join(",")}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                sortby = $('.nice-select.sort-select option:selected').val();

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`product/filter?${path.join('&')}`)
                .then(res => {
                        return res.text()
                    })
                .then(data => {
                    $('.shopProductList').html(data)
                })
            }

        });
        $("#amount").val("£" + $(".sb-range-slider").slider("values", 0) +
            " - £" + $(".sb-range-slider").slider("values", 1));

        

        $(document).on('click', '.paginated-btn, .categorybtn, .authorbtn', function (e) {
            if ($(this).hasClass('paginated-btn')) {
                e.preventDefault();

                let url = $(this).attr('href');


                let path = [];

                if (categoryIds.length > 0) {
                    path.push(`categoriesText=${categoryIds.join(",")}`);
                }

                if (authorIds.length > 0) {
                    path.push(`authorsText=${authorIds.join(",")}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                sortby = $('.nice-select.sort-select option:selected').val();

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`${url}&${path.join('&')}`)
                    .then(res => {
                        return res.text();
                    })
                    .then(data => {
                        $('.shopProductList').html(data)
                    })

            }
            else if ($(this).hasClass('categorybtn')) {
                e.preventDefault();

                let url = $(this).attr('href');
                let ctId = url.split('/')[url.split('/').length - 1];

                if (categoryIds.indexOf(ctId) > -1) {
                    categoryIds.splice(categoryIds.indexOf(ctId), 1);
                    $(this).css('color', '#555555');
                    $(this).css('font-weight', '400');
                } else {
                    categoryIds.push(ctId);
                    $(this).css('color', 'green');
                    $(this).css('font-weight', 'bold');
                }

                let path = [];

                if (categoryIds.length > 0) {
                    path.push(`categoriesText=${categoryIds.join(",")}`);
                }

                if (authorIds.length > 0) {
                    path.push(`authorsText=${authorIds.join(",")}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                sortby = $('.nice-select.sort-select option:selected').val();

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`${url}?${path.join('&')}`)
                    .then(res => {
                        return res.text()
                    })
                    .then(data => {
                        $('.shopProductList').html(data)
                    })
            }
            else if ($(this).hasClass('authorbtn')) {
                e.preventDefault();

                let url = $(this).attr('href');
                let authId = url.split('/')[url.split('/').length - 1];

                if (authorIds.indexOf(authId) > -1) {
                    authorIds.splice(authorIds.indexOf(authId), 1);
                    $(this).css('color', '#555555');
                    $(this).css('font-weight', '400');
                } else {
                    authorIds.push(authId);
                    $(this).css('color', 'green');
                    $(this).css('font-weight', 'bold');
                }

                let path = [];

                if (categoryIds.length > 0) {
                    path.push(`categoriesText=${categoryIds.join(",")}`);
                }

                if (authorIds.length > 0) {
                    path.push(`authorsText=${authorIds.join(",")}`);
                }

                if (min > -1) {
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                sortby = $('.nice-select.sort-select option:selected').val();

                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }

                fetch(`${url}?${path.join('&')}`)
                    .then(res => {
                        return res.text()
                    })
                    .then(data => {
                        $('.shopProductList').html(data)
                    })
            }
        })
            .on('change', '.nice-select', function (e) {
                e.preventDefault();

                let path = [];

                if (categoryIds.length > 0) {
                    path.push(`categoriesText=${categoryIds.join(",")}`);
                }

                if (authorIds.length > 0) {
                    path.push(`authorsText=${authorIds.join(",")}`);
                }

                if (min > -1) {
                    //if min is numric
                    path.push(`min=${min}`)
                }

                if (max > -1) {
                    path.push(`max=${max}`)
                }

                sortby = $('.nice-select.sort-select option:selected').val();


                if (sortby > -1) {
                    path.push(`sortby=${sortby}`)
                }
                fetch(`product/filter?${path.join('&')}`)
                    .then(res => {
                        return res.text();
                    })
                    .then(data => {
                        $('.shopProductList').html(data)
                    })


            })

    })
    

</script>

