@model ProfileVM
@{
    ViewData["Title"] = "Profile";
}

<section class="breadcrumb-section">
	<h2 class="sr-only">Site Breadcrumb</h2>
	<div class="container">
		<div class="breadcrumb-contents">
			<nav aria-label="breadcrumb">
				<ol class="breadcrumb">
					<li class="breadcrumb-item"><a href="index.html">Home</a></li>
					<li class="breadcrumb-item active">My Account</li>
				</ol>
			</nav>
		</div>
	</div>
</section>
<div class="page-section inner-page-sec-padding">
	<div class="container">
		<div class="row">
			<div class="col-12">
				<div class="row">
					<!-- My Account Tab Menu Start -->
					<div class="col-lg-3 col-12">
						<div class="myaccount-tab-menu nav" role="tablist">
							<a href="#orders" class="@(TempData["Tab"]?.ToString() == "Order" ? "active" : "")" data-toggle="tab" aria-selected="@(TempData["Tab"]?.ToString() == "Order" ? "true" : "false")"><i class="fa fa-cart-arrow-down"></i> Orders</a>
							<a href="#address-edit" class="@(TempData["Tab"]?.ToString() == "Address" ? "active" : "")" aria-selected="@(TempData["Tab"]?.ToString() == "Address" ? "true" : "false")" data-toggle="tab">
								<i class="fa fa-map-marker"></i>
								address
							</a>
							<a href="#account-info" class="@(TempData["Tab"]?.ToString() == "Account" ? "active" : "")" aria-selected="@(TempData["Tab"]?.ToString() == "Account" ? "true" : "false")" data-toggle="tab">
								<i class="fa fa-user"></i> Account
								Details
							</a>
							<a asp-controller="account" asp-action="logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
						</div>
					</div>
					<!-- My Account Tab Menu End -->
					<!-- My Account Tab Content Start -->
					<div class="col-lg-9 col-12 mt--30 mt-lg--0">
						<div class="tab-content" id="myaccountContent">
							<!-- Single Tab Content Start -->
							<div class="tab-pane fade @(TempData["Tab"]?.ToString() == "Order" ? "show active" : "")" id="orders" role="tabpanel">
								<div class="myaccount-content">
									<h3>Orders</h3>
									<div class="myaccount-table table-responsive text-center">
										<table class="table table-bordered">
											<thead class="thead-light">
												<tr>
													<th>No</th>
													<th>Full Name</th>
													<th>Created At</th>
													<th>Total Price</th>
													<th>Status</th>
													<th>Comment</th>
												</tr>
											</thead>
											<tbody>
												@if (Model.Orders != null && Model.Orders.Count() > 0)
												{
													foreach (Order order in Model.Orders)
													{
														<tr data-toggle="collapse" data-target="#demo@(order.Id)" class="accordion-toggle">
															<td>@order.No</td>
															<td>@order.CreatedAt?.ToString("dd MMM yyyy")</td>
															<td>@($"{order.Name} {order.SurName}")</td>
															<td>$@order.OrderItems.Sum(oi => oi.Price * oi.Count)</td>
															<td>@order.Status</td>
															<td>@order.Comment</td>
														</tr>
														<tr>
															<td colspan="6" class="hiddenRow">
																<div class="accordian-body collapse" id="demo@(order.Id)">
																	<table class="table table-bor">
																		<thead>
																			<tr>
																				<th class="name">Name</th>
																				<th class="status">Price</th>
																				<th class="total">Count</th>
																				<th class="action">Total</th>
																			</tr>
																		</thead>
																		<tbody>
																			@foreach (OrderItem orderItem in order.OrderItems)
																			{
																				<tr>
																					<td>@orderItem.Product.Title</td>
																					<td>@orderItem.Price</td>
																					<td>@orderItem.Count</td>
																					<td>@(orderItem.Count * orderItem.Price)</td>
																				</tr>
																			}
																		</tbody>
																	</table>
																</div>
															</td>
														</tr>
													}
												}
											</tbody>
										</table>
									</div>
								</div>
							</div>
							<!-- Single Tab Content End -->
							<!-- Single Tab Content Start -->
							<div class="tab-pane fade @(TempData["Tab"]?.ToString() == "Address" ? "show active" : "")" id="address-edit" role="tabpanel">
								<div class="myaccount-content">
									<h3>Billing Address</h3>
									<div class="addressesContainer @(TempData["ModelError"]?.ToString() != null ? "d-none" : "")">

										<div class="account-address my-30">
											<a class="main-btn main-btn-2 addAddress" style="cursor: pointer"><i class="far fa-edit"></i> Create Address</a>
										</div>
										@if (Model.Addresses != null && Model.Addresses.Count() > 0)
										{
											<div class="row" style="margin-top: 10px; margin-bottom: 10px; gap: 10px;">
												@foreach (Address address in Model.Addresses.OrderByDescending(a => a.IsMain))
												{
													<div class="account-address mt-30 col-lg-3" style="@(address.IsMain ? "border: 5px solid green" : "border: 1px solid gray") ">
														<h6 class="name">@address.Country</h6>
														<p>@address.City<br>@address.State</p>
														<p>@address.PostalCode</p>
														<a class="main-btn main-btn-2 addresseditbtn" asp-controller="Account" asp-action="EditAddress" asp-route-id="@address.Id"><i class="far fa-edit"></i> Edit Address</a>
													</div>
												}
											</div>
										}
									</div>
									<div class="addressForm @(TempData["ModelError"]?.ToString() != null ? "" : "d-none")">
										@await Html.PartialAsync("_AddressFormPartial", new Address())
									</div>
									<div class="editAdress d-none">
										
									</div>
								</div>
							</div>
							<!-- Single Tab Content End -->
							<!-- Single Tab Content Start -->
							<div class="tab-pane fade @(TempData["Tab"]?.ToString() == "Account" ? "show active" : "")" id="account-info" role="tabpanel">
								<div class="myaccount-content">
									<h3>Account Details</h3>
									<div class="account-details-form">
										@await Html.PartialAsync("_AccountFormPartial", Model.AccountVM)
									</div>
								</div>
							</div>
							<!-- Single Tab Content End -->
						</div>
					</div>
					<!-- My Account Tab Content End -->
				</div>
			</div>
		</div>
	</div>
</div>


@section Scripts{
	@await Html.PartialAsync("_ValidationPartial")
}